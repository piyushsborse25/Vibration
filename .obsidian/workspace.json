{
  "main": {
    "id": "32e2de230a9ca562",
    "type": "split",
    "children": [
      {
        "id": "db46cae5dab8c8ca",
        "type": "tabs",
        "children": [
          {
            "id": "b8ea1d29f0d41215",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Multithreading/Practical/3. Synchronization/Code to demonstrate livelock.md",
                "mode": "preview",
                "source": false,
                "backlinks": false
              },
              "icon": "lucide-file",
              "title": "Code to demonstrate livelock"
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "bc2c3b5ac5066217",
    "type": "split",
    "children": [
      {
        "id": "88d0ed273d814ce7",
        "type": "tabs",
        "children": [
          {
            "id": "5ae1239306496b5e",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical",
                "autoReveal": false
              },
              "icon": "lucide-folder-closed",
              "title": "Files"
            }
          },
          {
            "id": "44f876b941b91057",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 405.5
  },
  "right": {
    "id": "a2aa2e7bd80a04fa",
    "type": "split",
    "children": [
      {
        "id": "a505110cda6ca398",
        "type": "tabs",
        "children": [
          {
            "id": "08034153d60000a7",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "Payshare/Narrative.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "Backlinks for Narrative"
            }
          },
          {
            "id": "47c1b4c98734ecb7",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "Payshare/Narrative.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from Narrative"
            }
          },
          {
            "id": "2764ae815cf4285f",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true,
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-tags",
              "title": "Tags"
            }
          },
          {
            "id": "34e7975e750033e4",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-archive",
              "title": "All properties"
            }
          },
          {
            "id": "5c52c606a1b93826",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "Payshare/Narrative.md",
                "followCursor": false,
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-list",
              "title": "Outline of Narrative"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "markdown-importer:Open format converter": false,
      "zk-prefixer:Create new unique note": false
    }
  },
  "active": "b8ea1d29f0d41215",
  "lastOpenFiles": [
    "Java/Multithreading/Practical/3. Synchronization/Code to demonstrate deadlock between two threads.md",
    "Java/Multithreading/Why Runnable exists.md",
    "Java/Multithreading/Multithreading.md",
    "Untitled.canvas",
    "Java/Multithreading/ExecutorService/Chapters/Chapter 1 - Introduction to ExecutorService.md",
    "Java/Multithreading/Practical Multi-Threading.md",
    "Java/Multithreading/Practical/3. Synchronization/Code to demonstrate livelock.md",
    "Java/Multithreading/Practical/3. Synchronization/Code to show thread starvation.md",
    "Java/Multithreading/Practical/1. Thread Creation/Create a thread by implementing Runnable.md",
    "Java/Multithreading/Practical/1. Thread Creation/Create a thread by extending Thread.md",
    "Java/Multithreading/Practical/3. Synchronization/Code to synchronize a block of code instead of the whole method.md",
    "Java/Multithreading/Practical/3. Synchronization/Code to synchronize a method to avoid race conditions.md",
    "Java/Multithreading/Practical/3. Synchronization",
    "Java/Multithreading/Practical/2. Thread Lifecycle/Code to demonstrate sleep(), yield(), and join() effects on thread execution.md",
    "Java/Multithreading/Practical/2. Thread Lifecycle/Demonstrate thread states - NEW, RUNNABLE, WAITING, BLOCKED, TERMINATED.md",
    "System Design/System Design.md",
    "Track.md",
    "Java/Collections/Special Collections (Hierarchy).md",
    "Java/Multithreading/Practical/1. Thread Creation/Create a thread using Callable and Future and get the return value.md",
    "Java/Multithreading/Practical/2. Thread Lifecycle",
    "Java/Multithreading/Practical/1. Thread Creation",
    "Java/Multithreading/Practical",
    "Data.md",
    "ElasticSearch/Elasticsearch.md",
    "ElasticSearch/50 Elasticsearch interview questions.md",
    "Java/Multithreading/ExecutorService/The ExecutorService Handbook.md",
    "Java/Comprehensive Interview Preparation Track.md",
    "SD Path.md",
    "Java/Corners/AutoBoxing.md",
    "Java/Corners/Polymorphism Magic.md",
    "Java/Corners",
    "System Design/Untitled.canvas",
    "System Design/Design Patterns",
    "Java/Questions",
    "Payshare"
  ]
}